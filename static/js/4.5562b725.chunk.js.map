{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageForm","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","AddMessageFormRedux","reduxForm","form","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","dialogsItems","values","addMessage","compose","connect","dispatch","updateNewMessageTextActionCreator","text","addMessageActionCreator","withAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,2FCepMC,EAbI,SAACC,GAEhB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCOvBC,EAXC,SAACT,GAEb,OAEI,qBAAKG,UAAWC,IAAEM,QAAlB,SAA4BV,EAAMU,W,iCCJpCC,EAAcC,YAAiB,IAiBtBC,EAhBQ,SAACb,GAEpB,OACI,uBAAMc,SAAUd,EAAMe,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAaC,IAAUV,KAAO,iBAAiBW,YAAc,qBAAqBC,SAAY,CAACC,IAAUV,OAGpH,8BAEI,gDCmCVW,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,CAA0CV,GACvDY,EA1CC,SAACzB,GACb,IAAI0B,EAAQ1B,EAAM2B,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAiBN,GAAI6B,EAAE7B,IAAZ6B,EAAE7B,OAC1E8B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASxB,QAASwB,EAAExB,SAAcwB,EAAEhC,OAC9DwB,EAAMS,eAgB3B,OACI,sBAAKhC,UAAWC,IAAEyB,QAAlB,UACI,qBAAK1B,UAAWC,IAAEgC,aAAlB,SACKR,IAUL,sBAAKzB,UAAWC,IAAE6B,SAAlB,UACKD,EACD,cAACV,EAAD,CAAqBR,SAlBb,SAACuB,GAChBrC,EAAMsC,WAAWD,EAAOF,0B,yBCsBlBI,sBACXC,aArBkB,SAACd,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACc,GACtB,MAAO,CACHC,kCAAmC,SAACC,GAChCF,EAASC,YAAkCC,KAE/CL,WAAY,SAACH,GACTM,EAASG,YAAwBT,SAWzCU,IAFWN,CAGbd","file":"static/js/4.5562b725.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1L6-L\",\"dialogsItems\":\"Dialogs_dialogsItems__1kd5e\",\"active\":\"Dialogs_active__lAh0D\",\"dialog\":\"Dialogs_dialog__26m4w\",\"messages\":\"Dialogs_messages__3YHZr\",\"message\":\"Dialogs_message__2yvF_\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + \" \" + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    return (\r\n        \r\n        <div className={s.message}>{props.message}</div>\r\n        \r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Field, reduxForm} from 'redux-form';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst AddMessageForm = (props) => {\r\n    \r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component = {Textarea} name = \"newMessageBody\" placeholder = \"Enter your message\" validate = {[required, maxLength50]}  />\r\n                {/* <textarea onChange={onMessageChange} value={state.newMessageText} /> */}\r\n                </div>\r\n            <div>\r\n                {/* <button onClick={onSendMessageClick}>Add Text</button> */}\r\n                <button>Send</button>\r\n                </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddMessageForm;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { reduxForm} from 'redux-form';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    //let newAddElement = React.createRef();\r\n    // let onSendMessageClick = () => {\r\n       \r\n    //     props.addMessage();\r\n      \r\n    // }\r\n    // let onMessageChange = (e) => {\r\n    //     let text = e.target.value;\r\n        \r\n    //     props.updateNewMessageTextActionCreator(text);\r\n    // }\r\n    let addNewMessage = (values) => {\r\n         props.addMessage(values.newMessageBody) //у Димы send Message\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n                {/* <DialogItem name={dialogsData[0].name} id={dialogsData[0].id} />\r\n                <DialogItem name={dialogsData[1].name} id={dialogsData[1].id} /> */}\r\n                {/* <DialogItem name=\"Sveta\" id=\"3\" /> */}\r\n\r\n                {/* <div className={s.dialog}>\r\n                <NavLink to=\"/dialogs/2\">Andrey</NavLink>\r\n                </div> */}\r\n\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <AddMessageFormRedux onSubmit = {addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\nexport default Dialogs;","import React from 'react';\r\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\n\r\n// const DialogsContainer = () => {\r\n\r\n\r\n\r\n//     return <StoreContext.Consumer> \r\n//         { (store) =>{\r\n//             let state = store.getState().dialogsPage;\r\n\r\n//             let onSendMessageClick = () => {\r\n//                 store.dispatch(addMessageActionCreator());\r\n//             }\r\n//             let onMessageChange = (text) => {\r\n//                 store.dispatch(updateNewMessageTextActionCreator(text));\r\n//             }\r\n\r\n//        return <Dialogs updateNewMessageTextActionCreator={onMessageChange} \r\n//        addMessage={onSendMessageClick}\r\n//         dialogsPage={state} />}\r\n//     } \r\n//         </StoreContext.Consumer>\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewMessageTextActionCreator: (text) => {\r\n            dispatch(updateNewMessageTextActionCreator(text));\r\n        },\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody));\r\n        }\r\n    }\r\n\r\n};\r\n\r\n// let AuthRedirectComponent =  withAuthRedirect(Dialogs);\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}