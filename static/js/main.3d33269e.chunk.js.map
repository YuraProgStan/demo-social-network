{"version":3,"sources":["redux/dialogs-reducer.js","api/api.js","hoc/withAuthRedirect.js","components/Navbar/Navbar.module.css","reportWebVitals.js","redux/navbar-reducer.js","utils/objects-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","assets/images/user.png","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Login/Login.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.js","assets/images/preloader.svg","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","components/Users/users.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["ADD_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","initialState","dialogs","id","name","messages","message","addMessageActionCreator","newMessageBody","type","updateNewMessageTextActionCreator","text","newText","dialogsReducer","state","action","newMessage","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","navbar","profile","friends","title","friendname","avatarClassName","navbarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","userReducer","followed","count","filter","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","navBar","usersPage","usersReducer","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","Navbar","s","item","active","friendsAll","f","index","className","friend","avatar","friendName","friendsTitle","navLinks","n","activeClassName","activeLink","nav","NavbarContainer","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","useEffect","styles","paginator","onClick","p","cn","selectedPage","pageNumber","e","User","user","src","photos","small","userPhoto","disabled","some","Users","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","Preloader","compose","bind","page","totalCount","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","length","stopSubmit","_error","formData","News","Music","Settings","Header","header","loginBlock","HeaderContainer","withSuspense","Suspense","fallback","DialogsContainer","ProfileContainer","App","initializeApp","path","render","component","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","basename","process","ReactDOM","document","getElementById","FormControl","input","meta","touched","Formtype","hasError","formControl","Textarea","placeholder","validators","validate","backgroundColor","preloader","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.3d33269e.chunk.js","sourcesContent":["const ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Dimych' },\r\n        { id: 2, name: 'Andrew' },\r\n        { id: 3, name: 'Sveta' },\r\n        { id: 4, name: 'Sasha' },\r\n        { id: 5, name: 'Viktor' },\r\n        { id: 6, name: 'Valera' }\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'Hi' },\r\n        { id: 2, message: 'How is your it-kamasutra?' },\r\n        { id: 3, message: 'Yo' },\r\n        { id: 4, message: 'Yo' },\r\n        { id: 5, message: 'Yo' }\r\n    ]\r\n\r\n}\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n\r\n\r\nswitch (action.type) {\r\n    case ADD_MESSAGE:\r\n        let newMessage = {\r\n            id: 6,\r\n            message: action.newMessageBody\r\n        };\r\n      return  {\r\n            ...state,\r\n              messages: [...state.messages, newMessage]\r\n        };\r\n        \r\n        //stateCopy.messages = [...state.messages];\r\n       // stateCopy.messages.push(newMessage);\r\n       // stateCopy.newMessageBody = '';\r\n        //return stateCopy;\r\n\r\n    case UPDATE_NEW_MESSAGE_TEXT:\r\n        return  {\r\n            ...state,\r\n            newMessageBody: action.newText\r\n\r\n        };\r\n       // stateCopy.newMessageText = action.newText;\r\n       // return stateCopy;\r\n\r\n    default: return state;\r\n}\r\n}\r\n\r\nexport const addMessageActionCreator = (newMessageBody) => ({ type: ADD_MESSAGE, newMessageBody });\r\nexport const updateNewMessageTextActionCreator = (text) => {\r\n\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_TEXT,\r\n        newText: text\r\n    }\r\n}\r\nexport default dialogsReducer;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '124115ea-24ed-4ad7-984e-8bed965ccfd0'\r\n\r\n    }\r\n});\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n\r\n    },\r\n\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId)\r\n\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n            .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n  });\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n\r\n    }\r\n\r\n  let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent)\r\nreturn  ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1PvmZ\",\"item\":\"Navbar_item__3nMgW\",\"activeLink\":\"Navbar_activeLink__16hau\",\"friends\":\"Navbar_friends__zAG-a\",\"friend\":\"Navbar_friend__1gRbB\",\"avatar\":\"Navbar_avatar__1aHhQ\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initialState = {\r\n    navbar: [\r\n    { to: '/profile', profile: 'Profile' },\r\n    { to: '/dialogs', profile: 'Messages' },\r\n    { to: '/users', profile: 'Users' },\r\n    { to: '/news', profile: 'News' },\r\n    { to: '/music', profile: 'Music' },\r\n    { to: '/settings', profile: 'Settings' }\r\n],\r\nfriends: [\r\n    { title: 'Friends' },\r\n    { friendname: 'Andrew', avatarClassName: 1 },\r\n    { friendname: 'Sasha', avatarClassName: 2 },\r\n    { friendname: 'Sveta', avatarClassName: 3 }]\r\n}\r\n\r\nconst navbarReducer = (state = initialState, action) =>{\r\n    return state;\r\n}\r\n\r\nexport default navbarReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n\r\n   return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n\r\n    })\r\n}","import {usersAPI} from '../api/api';\r\nimport {updateObjectInArray} from \"../utils/objects-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\nlet initialState = {\r\n    users: [\r\n        // { id: 1, photoUrl: 'https://instagram-star.com/uploads/posts/2020-07/medium/1595793402_nagiev.jpg',\r\n        //  followed: false, fullName: 'Dmitriy', status: 'I am a boss', location: {city: 'Minsk', country: 'Belarus'} },\r\n        // { id: 2, photoUrl:'https://instagram-star.com/uploads/posts/2020-07/medium/1595793402_nagiev.jpg',\r\n        //     followed: true, fullName: 'Sasha', status: 'I am a boss too', location: {city: 'Moskow', country: 'Russsia'} },\r\n        // { id: 3, photoUrl: 'https://instagram-star.com/uploads/posts/2020-07/medium/1595793402_nagiev.jpg',\r\n        //  followed: false, fullName: 'Andrew', status: 'I am a boss too', location: {city: 'Kiev', country: 'Ukraine'} }\r\n\r\n    ],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return {...u, followed: true}\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users};\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\n// export const requestUsers = (page, pageSize) => { //requestUsers- это ThunkCreator\r\n//    return (dispatch) => {\r\n//         dispatch(toggleIsFetching(true));\r\n//         usersAPI.getUsers(page, pageSize).then(data => {\r\n//             dispatch(setCurrentPage(page));\r\n//             dispatch(toggleIsFetching(false));\r\n//             dispatch(setUsers(data.items));\r\n//             dispatch(setTotalUsersCount(data.totalCount));\r\n//         });\r\n//     }\r\n// }\r\n\r\nexport const requestUsers = (page, pageSize) => { //requestUsers- это ThunkCreator\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {        //логическая функция\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => { //follow - это ThunkCreator \r\n    return async (dispatch) => {\r\n    await  followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        await  followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\nexport default userReducer;","import {authAPI} from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\n//const TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false\r\n  //  isFetching: false\r\n};\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n\r\n\r\n    /* case TOGGLE_IS_FETCHING: {\r\n         return { ...state, isFetching: action.isFetching}\r\n     }*/\r\n\r\n    default: return state;\r\n\r\n  }\r\n}\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, payload: { userId, email, login, isAuth } });\r\n//export const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching })\r\n\r\n\r\n\r\n// export const getAuthUserData = () => (dispatch) => {\r\n//     return authAPI.me()\r\n//       .then(data => {\r\n//         if (data.resultCode === 0) {\r\n//           let { id, email, login } = data.data;\r\n//           dispatch(setAuthUserData(id, email, login, true));\r\n//         }\r\n//       });\r\n//   }\r\nexport const getAuthUserData = () =>async (dispatch) => {\r\n  let response = await authAPI.me()\r\n            if (response.resultCode === 0) {\r\n                let { id, email, login } = response.data;\r\n                dispatch(setAuthUserData(id, email, login, true));\r\n            }\r\n}\r\n\r\n  // export const login = (email, password, rememberMe) => (dispatch) => {\r\n  //\r\n  //   authAPI.login(email, password, rememberMe)\r\n  //     .then(data => {\r\n  //       if (data.resultCode === 0) {\r\n  //         dispatch(getAuthUserData())\r\n  //       } else {\r\n  //        let message = data.messages.length > 0 ? data.messages[0] : \"Some error\";\r\n  //         dispatch(stopSubmit(\"login\", {_error: message}));\r\n  //       }\r\n  //     });\r\n  //\r\n  // }\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.messages.length > 0 ? response.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\n  export const logout = () => async (dispatch) => {\r\n   let response = await authAPI.logout()\r\n             if (response.resultCode === 0) {\r\n          dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n\r\n  }\r\n\r\nexport default authReducer;","import {getAuthUserData} from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n initialized: false\r\n };\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n\r\n    default: return state;\r\n\r\n  }\r\n}\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\nlet promise = dispatch(getAuthUserData());\r\n//dispatch(somethingelse());\r\n//dispatch(somethingelse());\r\nPromise.all([promise]).then (() => {\r\n  dispatch(initializedSuccess());\r\n})}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport navbarReducer from \"./navbar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    navBar: navbarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\nexport default store;\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\n//s ={\r\n// 'nav': 'Navbar_nav__3ou9Q',\r\n//'item': 'Navabar_item__3qaF3',\r\n//'active': 'Navabar_active__3qhhh'\r\n//}\r\nlet c1 = \"item\";\r\nlet c2 = \"active\";\r\n//\"item active\"\r\nlet classes = c1 + \" \" + c2;\r\nlet classesNew = `${s.item} ${s.active}`;\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n \r\n\r\n  let friendsAll = props.navBar.friends.map((f,index) =>(index!==0)?<div className={s.friend}>\r\n    <div className={`${s.avatar} ${s.avatar}${f.avatarClassName}`}></div>\r\n    <div className={s.friendName}><span>{f.friendname}</span></div></div>\r\n    :\"\");\r\n   let {title:friendsTitle}=props.navBar.friends[0];\r\n \r\n //let friendsTag = `<h3>${friendsTitle}</h3>`;\r\n  let navLinks = props.navBar.navbar.map(n => <div className={s.item}><NavLink to={n.to} activeClassName={s.activeLink}>{n.profile}</NavLink></div>);\r\n\r\n  return (\r\n\r\n\r\n    <nav className={s.nav}>\r\n      {navLinks}\r\n<div className={s.friends}>\r\n\r\n<h3>{friendsTitle}</h3> \r\n      {friendsAll}\r\n\r\n      </div> \r\n    </nav>\r\n\r\n\r\n    // <nav className={s.nav}>\r\n    //   <div className={s.item}>\r\n    //     <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n    //   </div>\r\n    //   <div className={`${s.item} ${s.active}`}>\r\n    //     <NavLink to=\"/dialogs\"activeClassName={s.activeLink}>Messages</NavLink>\r\n    //   </div>\r\n    //   <div className={s.item}>\r\n    //     <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n    //   </div>\r\n    //   <div className={s.item}>\r\n    //     <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n    //   </div>\r\n    //   <div className={s.item}>\r\n    //     <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n    //   </div>\r\n    // </nav>\r\n\r\n  )\r\n}\r\nexport default Navbar","import React from 'react';\r\nimport Navbar from './Navbar';\r\nimport StoreContext from '../../StoreContext';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n// const NavbarContainer = () => {\r\n\r\n \r\n\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//     {(store) => {\r\n// let state=store.getState().navBar;\r\n//   return <Navbar  navBar={state} />}\r\n//     }\r\n//      </StoreContext.Consumer>\r\n//   )\r\n// }\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return{\r\n    navBar: state.navBar\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return{\r\n  }\r\n}\r\nconst NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar)\r\nexport default NavbarContainer","export default __webpack_public_path__ + \"static/media/user.ab7efdc7.png\";","import React, {useEffect, useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\"\r\n// let Paginator = ({totalUsersCount, currentPage, onPageChanged, pageSize}) => {\r\n//     let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n//     let pages = [];\r\n//     for (let i = 1; i <= pagesCount; i++) {\r\n//         pages.push(i);\r\n//     }\r\n//     return <div>\r\n//         {pages.map(p => {\r\n//             return <span className={currentPage === p && styles.selectedPage}\r\n//                          onClick={(e) => {\r\n//                              onPageChanged(p);\r\n//                          }}>{p}</span>\r\n//         })}\r\n//     </div>\r\n// }\r\n// export default Paginator;\r\n\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\nlet portionCount = Math.ceil (pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n    useEffect(()=>setPortionNumber(Math.ceil(currentPage/portionSize)), [currentPage]);\r\n\r\n\r\n    return <div className = {styles.paginator}>\r\n            {portionNumber > 1 &&\r\n                <button onClick = {() => {setPortionNumber(portionNumber - 1)}}>PREV</button>}\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<= rightPortionPageNumber)\r\n                .map((p)=> {\r\n                return <span className = { cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber)}\r\n                             key={p}\r\n                                 onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n        <button onClick = {() => {setPortionNumber(portionNumber +1)}}>NEXT</button>}\r\n        </div>\r\n        }\r\n\r\n        export default Paginator;","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport * as axios from \"axios\";\r\nimport {toggleFollowingProgress} from \"../../redux/users-reducer\";\r\nimport {usersAPI} from '../../api/api';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          unfollow(user.id);\r\n                                      }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          follow(user.id);\r\n                                      }}>\r\n                                Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n\r\n        </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport * as axios from \"axios\";\r\nimport {toggleFollowingProgress} from \"../../redux/users-reducer\";\r\nimport { usersAPI } from '../../api/api';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n// let Users = (props) => {\r\n//\r\n//     let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n//\r\n//     let pages = [];\r\n//     for (let i = 1; i <= pagesCount; i++) {\r\n//         pages.push(i);\r\n//     }\r\n//\r\n//\r\n//     return <div>\r\n//           <Paginator currentPage = {props.currentPage} onPageChanged = {props.onPageChanged}\r\n//                    totalUsersCount = {props.totalUsersCount} pageSize = {props.pageSize}  />\r\n//         {\r\n//            props.users.map(u => <div key={u.id}>\r\n//                 <span>\r\n//                     <div>\r\n//                        <NavLink to={'/profile/' + u.id}>\r\n//                         <img src={u.photos.small != null ? u.photos.small : userPhoto}\r\n//                              className={styles.userPhoto}/>\r\n//                        </NavLink>\r\n//                     </div>\r\n//                     <div>\r\n//                         {u.followed\r\n//                             ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n//                             onClick={() => {props.unfollow(u.id);}}>\r\n//                                 Unfollow</button>\r\n//                             : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n//                             onClick={() => {props.follow(u.id);}}>\r\n//                                 Follow</button>}\r\n//\r\n//                     </div>\r\n//                 </span>\r\n//                 <span>\r\n//                     <span>\r\n//                         <div>{u.name}</div>\r\n//                         <div>{u.status}</div>\r\n//                     </span>\r\n//                     <span>\r\n//                         <div>{\"u.location.country\"}</div>\r\n//                         <div>{\"u.location.city\"}</div>\r\n//                     </span>\r\n//                 </span>\r\n//             </div>)\r\n//         }\r\n//     </div>\r\n// }\r\n\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n\r\n       return <div>\r\n\r\n        <Paginator  currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\nexport default Users;","import { createSelector } from \"reselect/lib\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n// export const getUsersSelector = (state) => {\r\n//     return getUsers(state).filter (u => true);\r\n// }\r\nexport const getUsers = createSelector(getUsersSelector, \r\n    (users) => {\r\n  return  users.filter (u => true);\r\n})\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Users from './Users';\r\nimport { follow, \r\n   unfollow, \r\n \r\n   toggleFollowingProgress,\r\n   requestUsers } from '../../redux/users-reducer';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport {getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../redux/users-selectors'\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n   componentDidMount() {\r\n      const {currentPage, pageSize} = this.props;\r\n      this.props.requestUsers(currentPage, pageSize);\r\n   }\r\n\r\n   onPageChanged = (pageNumber) => {\r\n      const {pageSize} = this.props;\r\n      this.props.requestUsers(pageNumber, pageSize);\r\n\r\n       }\r\n\r\n   render() {\r\n\r\n      return <>\r\n         {this.props.isFetching ? <Preloader /> : null}\r\n         <Users totalUsersCount={this.props.totalUsersCount}\r\n            pageSize={this.props.pageSize}\r\n            currentPage={this.props.currentPage}\r\n            onPageChanged={this.onPageChanged}\r\n            users={this.props.users}\r\n            follow={this.props.follow}\r\n            unfollow={this.props.unfollow}\r\n            \r\n         \r\n            followingInProgress = {this.props.followingInProgress}\r\n\r\n         />\r\n      </>\r\n   }\r\n\r\n}\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      users: getUsers(state),\r\n      pageSize: getPageSize(state),\r\n      totalUsersCount: getTotalUsersCount(state),\r\n      currentPage: getCurrentPage(state),\r\n      isFetching: getIsFetching(state),\r\n      followingInProgress: getFollowingInProgress(state)\r\n   }\r\n}\r\n// let mapStateToProps = (state) => {\r\n//    return {\r\n//       users: state.usersPage.users,\r\n//       pageSize: state.usersPage.pageSize,\r\n//       totalUsersCount: state.usersPage.totalUsersCount,\r\n//       currentPage: state.usersPage.currentPage,\r\n//       isFetching: state.usersPage.isFetching,\r\n//       followingInProgress: state.usersPage.followingInProgress\r\n\r\n//    }\r\n// }\r\n\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//    return {\r\n//       follow: (userId) => {\r\n//          dispatch(followAC(userId))\r\n//       },\r\n//       unfollow: (userId) => {\r\n//          dispatch(unfollowAC(userId))\r\n//       },\r\n//       setUsers: (users) => {\r\n//          dispatch(setUsersAC(users))\r\n//       },\r\n//       setCurrentPage: (pageNumber) => {\r\n//          dispatch(setCurrentPageAC(pageNumber))\r\n//       },\r\n//       setTotalUsersCount: (totalCount) => {\r\n//          dispatch(setUsersTotalCountAC(totalCount))\r\n//       },\r\n//       toggleIsFetching: (isFetching) => {\r\n//          dispatch(toggleIsFetchingAC(isFetching))\r\n//       }\r\n//    }\r\n\r\n\r\n\r\n//export default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);\r\n// export default withAuthRedirect(connect(mapStateToProps, {\r\n//    follow, unfollow,  \r\n//    toggleFollowingProgress, getUsers  //getUsers - это callback, а также Thunk Creator\r\n//    })(UsersContainer));\r\n\r\nexport default compose(\r\n //  withAuthRedirect,\r\n   connect(mapStateToProps, {\r\n      follow, unfollow,  \r\n      toggleFollowingProgress, requestUsers  //getUsers - это callback, а также Thunk Creator\r\n      })\r\n      )(UsersContainer)","import React from 'react';\r\nimport {reduxForm} from 'redux-form';\r\nimport {createField, Input} from '../common/FormsControls/FormsControls';\r\nimport {required} from '../../utils/validators/validators';\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../../redux/auth-reducer';\r\nimport {Redirect} from 'react-router';\r\nimport style from '../common/FormsControls/FormsControls.module.css';\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News =(props)=>{\r\n    return (\r\n<div>\r\n    News\r\n</div>\r\n    )\r\n\r\n}\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music=()=>{\r\n\r\nreturn(\r\n    <div>\r\n        Music\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Music","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props)=>{\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src=\"https://i.pinimg.com/originals/60/4b/cf/604bcf5b9f1a54d6981b32e8c4150f65.jpg\" />\r\n    <div className = {s.loginBlock}>\r\n        {props.isAuth \r\n        ? <div>{props.login} <button onClick={props.logout}>Log out</button></div>\r\n        :<NavLink to = {'/login'}>Login</NavLink>}\r\n    </div>\r\n    \r\n    </header>\r\n}\r\nexport default Header","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {logout} from '../../redux/auth-reducer'\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    \r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer)","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    }\r\n}","import * as React from 'react';\nimport './App.css';\nimport NavbarContainer from './components/Navbar/NavbarContainer';\n//import ProfileContainer from './components/Profile/ProfileContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport LoginPage from './components/Login/Login';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport {BrowserRouter, HashRouter, Route} from 'react-router-dom';\n//import DialogsContainer from './components/Dialogs/DialogsContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport {initializeApp} from './redux/app-reducer';\nimport {connect, Provider} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport {compose} from 'redux';\nimport Preloader from './components/common/Preloader/Preloader';\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\n// let SomeComponent = ()=><Dialogs />;\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <NavbarContainer/>\n                <div className='app-wrapper-content'>\n                    {/* <Route path=\"/profile\" component={Profile} />\n          <Route path=\"/dialogs\" component={Dialogs} /> */}\n\n                    <Route path='/profile/:userId?'\n                           render={withSuspense(ProfileContainer)}/>\n                    <Route path='/dialogs'\n                           render = {withSuspense(DialogsContainer)}/>\n\n\n                    {/* <Route  path=\"/dialogs\" component={SomeComponent} /> */}\n                    <Route path='/users'\n                           render={() => <UsersContainer/>}/>\n                    <Route path='/login'\n                           render={() => <LoginPage/>}/>\n                    <Route path=\"/news\" component={News}/>\n                    <Route path=\"/music\" component={Music}/>\n                    <Route path=\"/settings\" component={Settings}/>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nconst MapStateToProps = (state) => ({\n    initialized: state.app.initialized\n\n})\n\n\nlet AppContainer = compose(\n    withRouter,\n    connect(MapStateToProps, {initializeApp}))(App);\nconst SamuraiJSApp = (props) => {\n    return <HashRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n        <AppContainer/>\n    </Provider>\n    </HashRouter>\n}\n\nexport default SamuraiJSApp;","//import * as serviceWorker from './serviceWorker';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/redux-store';\nimport React from 'react';\n//import state, {subscribe} from './redax/state';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from './App'\nimport App from './App';\n//import {addPost, updateNewPostText, addMessage, updateNewMessageText} from './redax/state';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from \"react-redux\";\n//import {Provider} from './StoreContext';\n\n\n{/* <BrowserRouter><App state={state} addPost={addPost} updateNewPostText={updateNewPostText}\naddMessage={addMessage} updateNewMessageText={updateNewMessageText} />\n</BrowserRouter> */}\n{/* <App state={state} dispatch={store.dispatch.bind(store)}\n\n                 addMessage={store.addMessage.bind(store)}\n                 updateNewMessageText={store.updateNewMessageText.bind(store)} /> */}\n\n// let rerenderEntireTree = () => {\n      ReactDOM.render(\n     //<React.StrictMode>\n\n        <SamuraiJSApp />\n        ,\n      // </React.StrictMode>\n       document.getElementById('root'))\n   // }\n\n// rerenderEntireTree(state);\n\n// subscribe(rerenderEntireTree);\n\n\n\n// store.subscribe(rerenderEntireTree);\n/*rerenderEntireTree(store.getState());\n\nstore.subscribe(() =>{\n   let state = store.getState();\n   rerenderEntireTree(state);\n});*/\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n//serviceWorker.unregister();","import React from 'react';\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n// const FormControl = ({input, meta, child, element, ... props}) => {\r\n//     const hasError = meta.touched && meta.error;\r\n//     return (\r\n//         <div className = {styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n//             <div>\r\n//            {props.children}\r\n//             </div>\r\n//            {hasError && <span>{meta.error}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\n// export const Textarea = (props) => {\r\n//     const {input, meta, children, ...restProps} = props;\r\n//     return <FormControl {...props}><textarea {...input}{...restProps} /></FormControl>;\r\n// }\r\n\r\n// export const Input = (props) => {\r\n//     const {input, meta, children, ...restProps} = props;\r\n//     return <FormControl {...props}><input {...input}{...restProps} /></FormControl>;\r\n// }\r\n\r\nconst FormControl = ({input, meta: {touched, error}, Formtype, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <Formtype {...input} {...props} />\r\n            </div>\r\n\r\n            <div>\r\n                {hasError && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    return <FormControl {...props} Formtype=\"textarea\"></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    return <FormControl {...props} Formtype=\"input\"></FormControl>\r\n}\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder} name= {name} validate= {validators} component= {component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n\r\n// export const Input = ({input, meta, ...props}) => {\r\n\r\n//     const hasError = meta.touched && meta.error;\r\n//     return (\r\n//         <div className = {styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n//             <div>\r\n//             <input {...input} {...props} />\r\n//             </div>\r\n//            {hasError && <span>{meta.error}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\n","export default __webpack_public_path__ + \"static/media/preloader.1885ab4b.svg\";","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.svg';\r\nlet Preloader = (props) => {\r\n    return <div style ={{backgroundColor: 'white'}}>\r\n        <img src={preloader} /> \r\n    </div>\r\n}\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"FormsControls_form-control__1ZMTw\",\"formControl\":\"FormsControls_formControl__W38n9\",\"error\":\"FormsControls_error__c5dsy\",\"formSummaryError\":\"FormsControls_formSummaryError__1bjRM\"};","export const required = value => {\r\n if (value) return undefined;\r\n\r\n return \"Field is required\";\r\n}\r\n \r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n     return undefined;\r\n}\r\n\r\n// export const maxLength30 = value => {\r\n//     if (value.length > 30) return \"Max length is 30 symbols\";\r\n//      return undefined;\r\n// }","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__1XZXp\",\"pageNumber\":\"Paginator_pageNumber__2kPm0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2ql6U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1_Mwy\",\"loginBlock\":\"Header_loginBlock__24c3y\"};","import {usersAPI, profileAPI} from '../api/api';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\n// const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    // newPostText: 'it-kamasutra.com',\r\n    profile: null,\r\n    status: \"\"\r\n}\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n            //stateCopy.posts = [...state.posts];\r\n            //stateCopy.posts.push(newPost);\r\n            // stateCopy.newPostText = '';\r\n            // return stateCopy;\r\n        }\r\n\r\n\r\n        // case UPDATE_NEW_POST_TEXT: {\r\n        //     return {\r\n        //         ...state,\r\n        //         newPostText: action.newText\r\n        //     };\r\n        // }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n// export const updateNewPostTextActionCreator = (text) =>\r\n//     ({ type: UPDATE_NEW_POST_TEXT, newText: text });\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}